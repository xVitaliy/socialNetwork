{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","s","dialog","active","activeClassName","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItem","value","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qJCI7MC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,sFCN9DM,EATI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,gBAAiBH,IAAEE,OAAQT,GAAII,EAAxC,SAA+CL,EAAMY,UCClDC,EALC,SAACb,GACb,OACI,qBAAKO,UAAWC,IAAEM,QAAlB,SAA4Bd,EAAMc,W,yCCDpCC,EAAcC,YAAiB,IAgBtBC,cAAU,CAAEC,KAAM,wBAAlBD,EAdQ,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAM,iBAAkBc,YAAa,yBAEhD,8BACI,iDCiBDC,EA1BC,SAAC3B,GACb,IAAIP,EAAQO,EAAM4B,YAEdC,EAAkBpC,EAAMqC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuB1B,GAAI0B,EAAE1B,GAAIM,KAAMoB,EAAEpB,MAAxBoB,EAAE1B,OAC5D2B,EAAmBxC,EAAMyC,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAoBrB,QAASqB,EAAErB,SAAjBqB,EAAE7B,OAC1Cb,EAAM2C,eAM3B,OAAKpC,EAAMN,OAGP,sBAAKa,UAAWC,IAAEsB,QAAlB,UACI,qBAAKvB,UAAWC,IAAE6B,YAAlB,SACKR,IAEL,sBAAKtB,UAAWC,IAAE0B,SAAlB,UACI,cAAC,EAAD,CAAgBf,SAZR,SAACmB,GACjBtC,EAAMuC,YAAYD,EAAMF,mBAYhB,8BAAMH,UATQ,cAAC,IAAD,CAAUhC,GAAI,Y,+BCK7BuC,sBACXrC,aAhBoB,SAACV,GACrB,MAAO,CACHmC,YAAanC,EAAMmC,gBAIA,SAACa,GACxB,MAAO,CACHF,YAAa,SAACH,GACVK,EAASC,YAAmBN,SAQpCxC,IAFW4C,CAGbb","file":"static/js/4.4acbae6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__31d0n\",\"dialogsItem\":\"Dialogs_dialogsItem__22E7s\",\"active\":\"Dialogs_active__2h-R8\",\"dialog\":\"Dialogs_dialog__3EueN\",\"messages\":\"Dialogs_messages__3G-Dn\",\"message\":\"Dialogs_message__399_g\"};","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","import s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink activeClassName={s.active} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\nexport default Message","import { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name={'newMessageBody'} placeholder={'enter your message'} />\r\n            </div>\r\n            <div>\r\n                <button>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)","import s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name} />)\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} />)\r\n    let newMessageBody = state.newMessageBody\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import { sendMessageCreator } from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}