{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","Preloader","Posts","item","message","likeCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.376ffa8d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3kheA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1qktz\",\"posts\":\"MyPosts_posts__3fslv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__2bO-e\"};","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            < div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt={''} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import s from './Posts.module.css'\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHG3EoDb1__ScyqlG6FetIP-uHBiPyUQadhpkdSRoCc8pNQiQp8ww3Rn1_EHzIovq5cpA&usqp=CAU\"\r\n                alt=\"\" />\r\n\r\n            {props.message}\r\n            <div>\r\n                <span>Like: {props.likeCount ? props.likeCount : ''}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts","import s from './MyPosts.module.css'\r\nimport Posts from \"./Post/Posts\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n//todo class Component\r\n\r\n// class MyPosts extends PureComponent {\r\n//\r\n//     // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n//     //     return nextProps !== this.props || nextState !== this.state\r\n//     // }\r\n//\r\n//     render() {\r\n//         let postsElements = this.props.posts.map(p => <Posts message={p.message} likeCount={p.likeCount} />)\r\n//         // let newPostElement = React.createRef()\r\n//\r\n//         const onAddPost = (values) => {\r\n//             this.props.addPost(values.newPostText);\r\n//         }\r\n//\r\n//         return (\r\n//             <div className={s.postsBlock}>\r\n//                 <h3> My Post </h3>\r\n//                 <AddNewPostFormRedux onSubmit={onAddPost} />\r\n//                 <div className={s.posts}>\r\n//                     {postsElements}\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Posts message={p.message} likeCount={p.likeCount} />)\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3> My Post </h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'}\r\n                       placeholder={'Post message'}\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, updateStatus } from \"../../Redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                         updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n//todo withAuthRedirect str:44 and str:16"],"sourceRoot":""}